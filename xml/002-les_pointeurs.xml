<?xml version="1.0" encoding="UTF-8"?>
<div>
<article>
<h1>Les tableaux</h1>
		<p>On a déjà vu comment stocker une seule variable à la fois, avouez c'est un peu chiant quand on a plusieurs centaines de valeurs à stocker.
		les ingénieurs sont vraiment des fainéant et ont inventés les tableaux pour stocker facilement une multitude de valeurs (Du même type !).
		On va donc voir comment sa marche.
		</p>
		<div class="code">
			<pre class="prettyprint lang-cpp">

//pour déclarer un tableau : type de données stockées, nom de la variable et sa taille

float tailleDeshobbits[4] = { 1.02, 1.10, 1.17, 0.95}; //leurs tailles en m !

//pour modifier directement une valeur

tailleDesHobbits[1] = 1.19; //ici on modifit la deuxième case du tableau (donc le deuxième hobbit)


			</pre>
		</div>
		<p>Et maintenant .. les POINTEURS. Et oui sa fait aussi peur que sa en à l'air.
		Alors comment expliquer un pointeur :</br> C'est une variable qui contient l'adresse d'une variable en mémoire.</br>
		Je vous l'avez dit, sa fait peur.</br></br>
		En c++ le pointeurs sait vers quel type de donnée il pointe (retenez bien ça). En gros ce qu'il faut retenir c'est que un pointeur fait référence à l'adresse d'une 
		variable et non son contenu. Vous verez avec le temps on s'y fait pas mais on y voit leurs utilités.
		</p>
		<div class="code">
			<pre class="prettyprint lang-cpp">

bool gandalf = true;

bool* pointeurVersGandalf; //ici on créer un pointeur non initaliser (donc vide, donc faut éviter sinon trou noir)
pointeurVersGandalf = &amp;gandalf; //ici on prend l'adresse de la variable gandale grâce au \"&amp\"
//ouch c'est dure tu comrpends quelque chose toi ?

			</pre>
		</div>
		<img src="../img/pointeur/gandalfisgay.png">
		<p>Mais c'est quoi l'utilité ? </br>
		Tu verras bientôt mon précieux</p>
	</article>
</div>