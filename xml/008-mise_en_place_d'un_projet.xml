<?xml version="1.0" encoding="UTF-8"?>
<div>
  <article>
    <h1>Explication</h1>
    <p>
      Pour obtenir une meilleure flexibilitée dans la compilation,
      ansi que de permettre l'utilisation d'un éditeur de code externe,
      mais aussi d'autres raisons
      <span class="mini">*cough* *cough* Vusial Studio Crash *cough* *cough*</span>,
      nous allons voir comment former notre prope environement de développement.
    </p>
    <p>
      Notez que c'est la façon dont <span class="gras">JE</span> le fais.<br/>
      Vous n'êtes pas obligé de tout suivre à la lettre.
    </p>
  </article>
  
  <article>
    <h1>Le faux disque dur</h1>
    <p>
      Le chemin vers un dique dur est très court: "C:/" ou encore "D:/".<br/>
      Un truc que j'aime faire c'est prendre le dossier dans lequel
      je vais faire mon développement et lui attribuer une lettre:<br/>
      pour celà existe la commande "subst":
      <img src="../img/set_up/subst.png" />
      Dans mon cas, ce sera subst W: "D:\\Party Junkie".
    </p>
    <p>
      Pour ceux qui ne savent pas ouvrir une invite de commande:
      <ul>
        <li>Appuyer sur les touches: Windows+R</li>
        <li>Taper: cmd</li>
        <li>Appuyer sur Entrer</li>
        <li>????</li>
        <li>PROFIT!!!</li>
      </ul>
    </p>
  </article>
  
  <article>
    <h1>L'éditeur de code</h1>
    <p>
      Comme éditeur de code, je vais utiliser
      <a href="https://www.gnu.org/software/emacs/">Emacs</a>
      dont le fichier de configuration sera mis à disposition.<br/>
      Mais strictement rien ne vous empêche d'utiliser un autre éditeur,
      ou encore d'utiliser visual studio commme éditeur de code.
    </p>
    <p>
      //NOTE(doc):
      // mkdir misc
      // cp .emacs
    </p>
  </article>

  <article>
    <h1>Créer des dossiers</h1>
    <p>
      <pre class="prettyprint lang-batch">
        cd w:
        mkdir misc
        mkdir code
        mkdir bin
      </pre>
    </p>
    <p>
      //TODO(doc): fix google coloartion code to include batch
    </p>
  </article>
  
  <article>
    <h1>Créer des dossiers</h1>
    <p>
      <pre class="prettyprint lang-cpp">
#include &lt;windows.h&gt;
int CALLBACK
WinMain(HINSTANCE Instance,
    HINSTANCE PrevInstance,
    LPSTR     CmdLine,
    int       CmdShow){
    return(0);
}
      </pre>
    </p>
    <p>
      //TODO(doc): fix google coloartion code to include windows specific stuff
    </p>
  </article>

  <article>
    <h1>La compilation</h1>
    <p>
      La méthode que je vais présenter choque et horifie absoluement tous
      les dévelopeurs, et je m'en excuse.<br/>
      Mais vous savez quoi ? C'est comme ça que je build mes trucs et je ne vais
      pas changer de méthode.
    </p>
    <p>
      A la base de mon project je crée un "build.bat".
    </p>
    <img style="max-height: 100vh;" src="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/The_Scream.jpg/800px-The_Scream.jpg"/>
    <p>
      Un .bat est un fichier de script sous windows qui peut faire ce que
      l'invite de commande peut faire.
    </p>
    <p>
      Pour l'info, la plupart des développeurs utilise un
      <a href="https://www.gnu.org/software/make/">make</a>-system
    </p>
  </article>
</div>
